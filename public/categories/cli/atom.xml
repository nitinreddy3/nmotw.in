<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: cli | NMOTW]]></title>
  <link href="http://nmotw.in/github/public/categories/cli/atom.xml" rel="self"/>
  <link href="http://nmotw.in/github/"/>
  <updated>2016-06-09T12:43:12+00:00</updated>
  <id>http://nmotw.in/github/</id>
  <author>
    <name><![CDATA[Hemanth.HM]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[pwaify]]></title>
    <link href="http://nmotw.in/github/pwaify/"/>
    <updated>2016-06-09T12:33:41+00:00</updated>
    <id>http://nmotw.in/github/pwaify</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/pwaify">pwaify</a></h1>

<blockquote><p>Electron PWA (Progressive Web App) Generator.</p></blockquote>

<p><code>pwaify</code> bring <a href="https://developers.google.com/web/progressive-web-apps/">progressive</a> <a href="https://github.com/hemanth/generator-pwa">Webapp</a> to your desktops across platforms!</p>

<p>Makes use of <a href="http://electron.atom.io/">Electron</a> extracts the <code>manifest-json</code> from the given URL and smartly creates an electron window and loads the required.</p>

<p><strong>Get it:</strong> <code>npm install --global pwaify</code></p>

<p><strong>Sample usage:</strong></p>

<p>```sh
nmotw.in> pwaify --help</p>

<p>  Electron PWA (Progressive Web App) Generator</p>

<p>  Usage</p>

<pre><code>$ pwaify &lt;input&gt;
</code></pre>

<p>  Options</p>

<pre><code>--platforms Platforms to build the app.
--icon App Icon.
</code></pre>

<p>  Examples</p>

<pre><code>$ pwaify https://jsfeatures.in --platforms=darwin
</code></pre>

<p>```</p>

<p><strong>GIF FTW:</strong></p>

<p><img src="/images/pwaify/pwaify.gif" alt="PWAify" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mediumcli]]></title>
    <link href="http://nmotw.in/github/mediumcli/"/>
    <updated>2016-05-26T14:13:06+00:00</updated>
    <id>http://nmotw.in/github/mediumcli</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/mediumcli">mediumcli</a></h1>

<blockquote><p>A CLI to Medium Stories.</p></blockquote>

<p>A simple tool that helps you to read medium posts on your CLI.</p>

<p><strong>Get it:</strong> <code>npm install -g mediumcli</code></p>

<p><strong>Sample usage:</strong> <code>medium [options] [command]</code></p>

<p>```sh
Commands:</p>

<p>top [options]         List Medium Top Stories
read <url>            Read the story right in your terminal
open [options] <url>  Opens it in your browser</p>

<p>Options:</p>

<p>-h, --help     output usage information
-V, --version  output the version number</p>

<p>top [options]
n, --number <int>", "specify number of stories</p>

<p>open [options] <url>
-a, --app <application>  specify app to open the url. Eg: firefox</p>

<p>```</p>

<p><strong>GIF FTW!</strong></p>

<p><img src="/images/mediumcli/mediumcli.gif" alt="mediumcli" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[trevor]]></title>
    <link href="http://nmotw.in/github/trevor/"/>
    <updated>2016-04-28T10:26:32+00:00</updated>
    <id>http://nmotw.in/github/trevor</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/trevor">trevor</a></h1>

<blockquote><p>Your own Travis CI to run tests locally.</p></blockquote>

<p><img src="/images/trevor/logo.png" alt="" /></p>

<p><strong>From the author:</strong></p>

<p>I often need to run tests for multiple versions of Node.js.</p>

<p>But I don't want to switch versions manually using n/nvm or push the code to Travis CI just to run the tests.</p>

<p>That's why I created Trevor.</p>

<p>It reads <code>.travis.yml</code> and runs tests in all versions you requested, just like Travis CI.</p>

<p>Now, you can test before push and keep your git history clean.</p>

<p><strong>Get it:</strong> <code>npm install --save trevor</code></p>

<p><strong>Sample usage:</strong></p>

<p>```sh
$ trevor --help</p>

<p>  Your own Travis CI to run tests locally</p>

<p>  Usage: trevor [options]</p>

<p>  Options:</p>

<pre><code>-h, --help    Show this help
--no-clean    Don' remove the Docker image after tests
</code></pre>

<p>  Required files (in the current directory):</p>

<pre><code>- package.json
- .travis.yml
</code></pre>

<p>```</p>

<p>P.S: <code>trevor</code> has a dependency on <a href="https://www.docker.com/">docker</a> and if <code>--no-clean</code> is not used it will remove all the docker images after the test runs.</p>

<p><strong>GIF FTW!</strong></p>

<p><img src="/images/trevor/trevor.gif" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[wifi-password]]></title>
    <link href="http://nmotw.in/github/wifi-password/"/>
    <updated>2016-04-14T16:15:12+00:00</updated>
    <id>http://nmotw.in/github/wifi-password</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/wifi-password">wifi-password</a></h1>

<blockquote><p>Get current wifi password.</p></blockquote>

<p>Do you remember your wifi password?</p>

<p>Do you want share it with your guests?</p>

<p><code>wifi-password</code> is the util to use works across OSs.</p>

<p>Basically fires the below commands based on the OS for the given or connected <code>SSID</code>:</p>

<ul>
<li><p><code>GNU/Linux</code> -> <code>sudo cat /etc/NetworkManager/system-connections/${ssid}</code>;</p></li>
<li><p><code>OSX</code> ->  <code>security find-generic-password -D AirPort network password -wa ssid</code></p></li>
<li><p><code>Windows</code> -> <code>netsh wlan show profile $(name=${ssid}) $(key=clear)</code></p></li>
</ul>


<p><strong>GET IT</strong>:</p>

<p><code>npm install --save wifi-password</code> for API</p>

<p>```js
const wifiPassword = require('wifi-password');</p>

<p>wifiPassword().then(password => {</p>

<pre><code>console.log(password);
//=&gt; 'johndoesecretpassword'
</code></pre>

<p>});
```</p>

<p><code>npm install --global wifi-password</code> for CLI.</p>

<p>```js
$ wifi-password --help</p>

<p>  Usage</p>

<pre><code>$ wifi-password
johndoesecretpassword

$ wifi-password foo-network
foosecretpassword
</code></pre>

<p>```</p>

<p><strong>GIF FTW!</strong></p>

<p><img src="/images/wifi-password/wifi-password.gif" alt="wifi-password" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[trymodule]]></title>
    <link href="http://nmotw.in/github/trymodule/"/>
    <updated>2016-03-31T13:11:49+00:00</updated>
    <id>http://nmotw.in/github/trymodule</id>
    <content type="html"><![CDATA[<h1><a href="">trymodule</a></h1>

<blockquote><p>It's never been easier to try nodejs modules!</p></blockquote>

<p>Quickly install any node module you want and start a <code>REPL</code> with the installed module in the scope with <code>trymodule</code>!</p>

<p>Basically, it check if the module you are trying exists in the <code>~/.trymodule/node_module</code> if require it and start a <code>REPL</code> or
else installs it using <code>npmi</code> module and starts the <code>REPL</code>.</p>

<p><strong>Get it:</strong> <code>npm install -g trymodule</code></p>

<p><strong>Sample usage:</strong></p>

<p>```sh
nmotw.in> trymodule xkcd-imgs
Gonna start a REPL with packages installed and loaded for you
Couldn't find 'xkcd-imgs' locally, gonna download it now
xkcd-imgs@1.0.1 ../../Users/hhegadehallimadh/.trymodule/node_modules/xkcd-imgs
└── request@2.69.0 (aws-sign2@0.6.0, forever-agent@0.6.1, tunnel-agent@0.4.2, oauth-sign@0.8.1, caseless@0.11.0, is-typedarray@1.0.0, stringstream@0.0.5, isstream@0.1.2, json-stringify-safe@5.0.1, extend@3.0.0, tough-cookie@2.2.2, node-uuid@1.4.7, qs@6.0.2, mime-types@2.1.10, form-data@1.0.0-rc4, combined-stream@1.0.5, hawk@3.1.3, aws4@1.3.2, http-signature@1.1.1, bl@1.0.3, har-validator@2.0.6)
Package 'xkcd-imgs' was loaded and assigned to 'xkcd_imgs' in the current scope
REPL started...</p>

<blockquote><p>```</p></blockquote>

<p>```js</p>

<blockquote><p>xkcd_imgs
{ img: [Function] }
xkcd_imgs.img( (err, res) => console.log(res) );
undefined
{ url: 'http://imgs.xkcd.com/comics/instagram.png',
  title: 'I\'m gonna call the cops and get Chad arrested for theft, then move all my stuff to the house across the street. Hopefully the owners there are more responsible.' }
```</p></blockquote>

<p><strong>GIF FTW!</strong></p>

<p><img src="/images/trymodule/trymodule.gif" alt="trymodule" /></p>
]]></content>
  </entry>
  
</feed>
