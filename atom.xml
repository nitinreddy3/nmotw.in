<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[NMOTW]]></title>
  <link href="http://nmotw.in/atom.xml" rel="self"/>
  <link href="http://nmotw.in/"/>
  <updated>2016-10-13T14:17:50+00:00</updated>
  <id>http://nmotw.in/</id>
  <author>
    <name><![CDATA[Hemanth.HM]]></name>
    
  </author>

  
  <entry>
    <title type="html"><![CDATA[yarn]]></title>
    <link href="http://nmotw.in/yarn/"/>
    <updated>2016-10-13T14:07:03+00:00</updated>
    <id>http://nmotw.in/yarn</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/yarn">yarn</a></h1>

<blockquote><p>FAST, RELIABLE, AND SECURE DEPENDENCY MANAGEMENT.</p></blockquote>

<p><code>yarn</code> let use call it a faster <code>npm</code>? Open sourced by facebook, has the below features:</p>

<ul>
<li>Offline Mode: If you've installed a package before, you can install it again without any internet connection.</li>
<li>Deterministic: The same dependencies will be installed the same exact way across every machine regardless of install order.</li>
<li>Network Performance: Yarn efficiently queues up requests and avoids request waterfalls in order to maximize network utilization.</li>
<li>Multiple Registries: Install any package from either npm or Bower and keep your package workflow the same.</li>
<li>Network Resilience: A single request failing won't cause an install to fail. Requests are retried upon failure.</li>
<li>Flat Mode: Resolve mismatching versions of dependencies to a single version to avoid creating duplicates.</li>
<li>More emojis. üêà</li>
</ul>


<p><strong>Get it:</strong> <code>npm install --global yarn</code></p>

<p><strong>CLI usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>yarn add
</span><span class='line'>yarn bin
</span><span class='line'>yarn cache
</span><span class='line'>yarn check
</span><span class='line'>yarn clean
</span><span class='line'>yarn config
</span><span class='line'>yarn generate-lock-entry
</span><span class='line'>yarn global
</span><span class='line'>yarn info
</span><span class='line'>yarn init
</span><span class='line'>yarn install
</span><span class='line'>yarn licenses
</span><span class='line'>yarn link
</span><span class='line'>yarn login
</span><span class='line'>yarn <span class="nb">logout</span>
</span><span class='line'>yarn ls
</span><span class='line'>yarn outdated
</span><span class='line'>yarn owner
</span><span class='line'>yarn pack
</span><span class='line'>yarn publish
</span><span class='line'>yarn remove
</span><span class='line'>yarn run
</span><span class='line'>yarn self-update
</span><span class='line'>yarn tag
</span><span class='line'>yarn team
</span><span class='line'>yarn <span class="nb">test</span>
</span><span class='line'>yarn unlink
</span><span class='line'>yarn upgrade
</span><span class='line'>yarn version
</span><span class='line'>yarn why
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/yarn/yarn.gif" alt="yarn" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[resize-observer-polyfill]]></title>
    <link href="http://nmotw.in/resize-observer-polyfill/"/>
    <updated>2016-10-06T17:06:53+00:00</updated>
    <id>http://nmotw.in/resize-observer-polyfill</id>
    <content type="html"><![CDATA[<h1><a href="">resize-observer-polyfill</a></h1>

<blockquote><p>A polyfill for Resize Observer API.</p></blockquote>

<p>Implements event based tracking of changes in the dimensions of elements.</p>

<p>Uses MutationsObserver and falls back to an infinite dirty checking cycle if the first one is not supported.</p>

<p>Handles long running CSS transitions/animations, attributes and nodes mutations along with changes made by :hover pseudo-class (optional).</p>

<p>Compliant with the <a href="http://rawgit.com/WICG/ResizeObserver/master/index.html">spec</a>.</p>

<p>Doesn't contain any publicly available methods except for those described in the spec.</p>

<p><strong>Get it:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">npm</span> <span class="nx">install</span> <span class="o">--</span><span class="nx">save</span> <span class="nx">resize</span><span class="o">-</span><span class="nx">observer</span><span class="o">-</span><span class="nx">polyfill</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">import</span> <span class="nx">ResizeObserver</span> <span class="nx">from</span> <span class="s1">&#39;resize-observer-polyfill&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kr">const</span> <span class="nx">observer</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ResizeObserver</span><span class="p">((</span><span class="nx">entries</span><span class="p">,</span> <span class="nx">observer</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">observer</span><span class="p">.</span><span class="nx">observe</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/resize-observer-polyfill/resize-observer-polyfill.gif" alt="resize-observer-polyfill" /></p>

<p>P.S: Checkout the <a href="http://que-etc.github.io/resize-observer-polyfill">Live demo</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[autosize-input]]></title>
    <link href="http://nmotw.in/autosize-input/"/>
    <updated>2016-09-29T14:00:53+00:00</updated>
    <id>http://nmotw.in/autosize-input</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.org/package/autosize-input">autosize-input</a></h1>

<blockquote><p>Effortless, dynamic-width text boxes.</p></blockquote>

<p><strong>Features:</strong></p>

<ul>
<li>Dynamically adjusts the width of the text box to fit its current contents</li>
<li>Can be initialised to fit its <code>placeholder</code> attribute</li>
<li>Optionally set a <code>min-width</code> based on the element&rsquo;s initial content</li>
</ul>


<p><strong>Get it:</strong> <code>npm install -g autosize-input</code></p>

<p><strong>Usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">autosizeInput</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s1">&#39;#foo&#39;</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'><span class="nx">autosizeInput</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s1">&#39;#bar&#39;</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'><span class="nx">autosizeInput</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s1">&#39;#baz&#39;</span><span class="p">),</span> <span class="p">{</span> <span class="nx">minWidth</span><span class="o">:</span> <span class="kc">true</span> <span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Implementation details:</strong></p>

<ul>
<li><p>The <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing"><code>box-sizing</code></a> property of the given text box is set, inline, to <code>content-box</code>. Therefore, the width we assign to our text box <em>excludes</em> its <code>padding</code> and <code>border</code> properties.</p></li>
<li><p>A hidden &ldquo;ghost&rdquo; <code>div</code> &mdash; given the same <code>font-size</code> and <code>font-family</code> as the text box &mdash; is used to compute the correct width to assign to the text box. This width is recomputed and assigned to the text box on every <a href="https://developer.mozilla.org/en-US/docs/Web/Events/input"><code>input</code></a> event.</p></li>
<li><p>The single &ldquo;ghost&rdquo; element is shared amongst all the &ldquo;autosized&rdquo; text boxes on the page.</p></li>
</ul>


<p><strong>GIF FTW:</strong></p>

<p><img src="http://nmotw.in/images/autoinput-size/autosize-input.gif" alt="autoinput-size" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[asyncbox]]></title>
    <link href="http://nmotw.in/asyncbox/"/>
    <updated>2016-09-22T17:07:26+00:00</updated>
    <id>http://nmotw.in/asyncbox</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/asyncbox">asyncbox</a></h1>

<blockquote><p>A collection of small <code>async/await</code> utilities.</p></blockquote>

<p>A simple collection of tiny useful <code>async/await</code> utilities, the below are the list of function that <code>asyncbox</code> gives:</p>

<ul>
<li>sleep</li>
<li>retry</li>
<li>nodeify</li>
<li>nodeifyAll</li>
<li>retryInterval</li>
<li>asyncify</li>
<li>parallel</li>
<li>asyncmap</li>
<li>asyncfilter</li>
<li>waitForCondition</li>
</ul>


<p><strong>Get it:</strong> <code>npm install --save asyncbox</code></p>

<p><strong>Usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">import</span> <span class="p">{</span> <span class="nx">sleep</span> <span class="p">}</span> <span class="nx">from</span> <span class="s1">&#39;asyncbox&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">async</span> <span class="kd">function</span> <span class="nx">myFn</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// do some stuff </span>
</span><span class='line'>    <span class="nx">await</span> <span class="nx">sleep</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span> <span class="c1">// wait one second </span>
</span><span class='line'>    <span class="c1">// do some other stuff </span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="nx">myFn</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/asyncbox/asyncbox.gif" alt="asyncbox" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[granim]]></title>
    <link href="http://nmotw.in/granim/"/>
    <updated>2016-09-14T23:55:40+00:00</updated>
    <id>http://nmotw.in/granim</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/granim">granim</a></h1>

<blockquote><p>Create fluid and interactive gradients animations.</p></blockquote>

<p>Zero dependencies,<code>&lt; 10 kB</code> fun module that helps us to do some cool gradient animations!</p>

<p><strong>Get it:</strong> <code>npm install granim --save</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="c">&lt;!-- Create a &lt;canvas&gt; element --&gt;</span>
</span><span class='line'><span class="nt">&lt;canvas</span> <span class="na">id=</span><span class="s">&quot;granim-canvas&quot;</span><span class="nt">&gt;&lt;/canvas&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">granimInstance</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Granim</span><span class="p">({</span>
</span><span class='line'>   <span class="nx">element</span><span class="o">:</span> <span class="s1">&#39;#granim-canvas&#39;</span><span class="p">,</span>
</span><span class='line'>   <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;granim&#39;</span><span class="p">,</span>
</span><span class='line'>   <span class="nx">opacity</span><span class="o">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">],</span>
</span><span class='line'>   <span class="nx">states</span> <span class="o">:</span> <span class="p">{</span>
</span><span class='line'>       <span class="s2">&quot;default-state&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>           <span class="nx">gradients</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>               <span class="p">[</span><span class="s1">&#39;#834D9B&#39;</span><span class="p">,</span> <span class="s1">&#39;#D04ED6&#39;</span><span class="p">],</span>
</span><span class='line'>               <span class="p">[</span><span class="s1">&#39;#1CD8D2&#39;</span><span class="p">,</span> <span class="s1">&#39;#93EDC7&#39;</span><span class="p">]</span>
</span><span class='line'>           <span class="p">]</span>
</span><span class='line'>       <span class="p">}</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>P.S: Don't miss to read their extensive <a href="https://sarcadass.github.io/granim.js/api.html">API</a></p>

<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/granim/granim.gif" alt="granim" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[quill]]></title>
    <link href="http://nmotw.in/quill/"/>
    <updated>2016-09-08T13:08:58+00:00</updated>
    <id>http://nmotw.in/quill</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/quill">quill</a></h1>

<blockquote><p>An API Driven Rich Text Editor.</p></blockquote>

<p>For the initial commit looks like <code>quill</code> has taken two long years to reach <code>v1.x</code> and indeed it's proven itself to be a very tidy API driven rich text editor.</p>

<p><strong>quill has <a href="http://quilljs.com/docs/api/">APIs</a> for:</strong></p>

<ul>
<li><p>Content handling.</p></li>
<li><p>Formatting.</p></li>
<li><p>Selection.</p></li>
<li><p>Events</p></li>
<li><p>Extensions.</p></li>
</ul>


<p><strong>quill also <a href="http://quilljs.com/docs/modules/">modules</a> for:</strong></p>

<ul>
<li><p>TOOLBAR</p></li>
<li><p>KEYBOARD</p></li>
<li><p>HISTORY</p></li>
<li><p>CLIPBOARD</p></li>
<li><p>FORMULA</p></li>
<li><p>SYNTAX</p></li>
</ul>


<p><strong>Finally, it has theme(s)!:</strong></p>

<ul>
<li><p>Bubble</p></li>
<li><p>Snow</p></li>
</ul>


<p><strong>Get it:</strong> <code>npm install --save quill</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">Quill</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;quill&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">quill</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Quill</span><span class="p">(</span><span class="s1">&#39;#editor-container&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">modules</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">toolbar</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>      <span class="p">[{</span> <span class="nx">header</span><span class="o">:</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="kc">false</span><span class="p">]</span> <span class="p">}],</span>
</span><span class='line'>      <span class="p">[</span><span class="s1">&#39;bold&#39;</span><span class="p">,</span> <span class="s1">&#39;italic&#39;</span><span class="p">,</span> <span class="s1">&#39;underline&#39;</span><span class="p">],</span>
</span><span class='line'>      <span class="p">[</span><span class="s1">&#39;image&#39;</span><span class="p">,</span> <span class="s1">&#39;code-block&#39;</span><span class="p">]</span>
</span><span class='line'>    <span class="p">]</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">placeholder</span><span class="o">:</span> <span class="s1">&#39;Compose an epic...&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">theme</span><span class="o">:</span> <span class="s1">&#39;snow&#39;</span> <span class="c1">// or &#39;bubble&#39;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/quill/quill.gif" alt="quill" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[auto-install]]></title>
    <link href="http://nmotw.in/auto-install/"/>
    <updated>2016-09-01T14:05:36+00:00</updated>
    <id>http://nmotw.in/auto-install</id>
    <content type="html"><![CDATA[<h1><a href="https://nmp.im/auto-install">auto-install</a></h1>

<blockquote><p>Auto installs dependencies as you code on save.</p></blockquote>

<p>Have you ever wished that need to having a tool that would just do an <code>npm install</code> of modules that you <code>import</code>?</p>

<p>Well, here is <code>auto-install</code> that does exactly what you wished for!</p>

<p><strong>Get it:</strong> <code>npm install -g auto-install</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># In case you run it in a folder that doesn&#39;t have a `package.json`</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>auto-install --help
</span><span class='line'>package.json does not exist
</span><span class='line'>You can create one by using <span class="sb">`</span>npm init<span class="sb">`</span>
</span><span class='line'>
</span><span class='line'><span class="c"># With a package.json</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>auto-install
</span><span class='line'>Watchers initialized
</span></code></pre></td></tr></table></div></figure>


<p><strong>CLI Flags:</strong></p>

<p><code>--secure</code>  Install popular modules only (> 10k downloads in the last month)</p>

<p><code>--exact</code>   Install exact version similar to <code>npm install express --save-exact</code></p>

<p><code>--dont-uninstall</code>   Do not uninstall unused modules</p>

<p>P.S: <a href="https://github.com/siddharthkp/auto-install/issues/6">Does it protect against typosquatting?</a></p>

<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/auto-install/auto-install.gif" alt="auto-install" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pwmetrics]]></title>
    <link href="http://nmotw.in/pwmetrics/"/>
    <updated>2016-08-25T13:33:31+00:00</updated>
    <id>http://nmotw.in/pwmetrics</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/pwmetrics">pwmetrics</a></h1>

<blockquote><p>Progressive web metrics at your fingertipz. üíÖ</p></blockquote>

<p><code>pwmetrics</code> CLI tool and lib to gather performance metrics via <a href="https://github.com/GoogleChrome/lighthouse/">Lighthouse</a>.</p>

<p>P.S: This module is <em>IN BETA</em>, so you must be ready for anything üòâ</p>

<p><strong>GET IT:</strong> <code>npm install --global pwmetrics</code> or <code>npm install --save pwmetrics</code></p>

<p><strong>Sample CLI usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># run Chrome with port 9222 open</span>
</span><span class='line'>chrome  --remote-debugging-port<span class="o">=</span>9222 --no-first-run --user-data-dir<span class="o">=</span><span class="k">$(</span>mktemp -d -t pwm.XXXXX<span class="k">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># run pwmetrics with your url</span>
</span><span class='line'>pwmetrics https://jsfeatures.in
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>pwmetrics --json https://jsfeatures.in
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;timings&quot;</span>: <span class="o">[</span>
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>      <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;First Contentful Paint&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;value&quot;</span>: 1875.337
</span><span class='line'>    <span class="o">}</span>,
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>      <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;First Meaningful Paint&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;value&quot;</span>: 1970.7
</span><span class='line'>    <span class="o">}</span>,
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>      <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;Median Visual Completion&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;value&quot;</span>: 1997
</span><span class='line'>    <span class="o">}</span>,
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>      <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;First Visual Change&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;value&quot;</span>: 1917
</span><span class='line'>    <span class="o">}</span>,
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>      <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;Visually Complete 100%&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;value&quot;</span>: 2004
</span><span class='line'>    <span class="o">}</span>,
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>      <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;Time to Interactive&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;value&quot;</span>: -1
</span><span class='line'>    <span class="o">}</span>,
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>      <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;Visually Complete 85%&quot;</span>
</span><span class='line'>    <span class="o">}</span>,
</span><span class='line'>    <span class="o">{</span>
</span><span class='line'>      <span class="s2">&quot;name&quot;</span>: <span class="s2">&quot;Navigation Start&quot;</span>,
</span><span class='line'>      <span class="s2">&quot;value&quot;</span>: 0
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>  <span class="o">]</span>,
</span><span class='line'>  <span class="s2">&quot;timestamps&quot;</span>: <span class="o">[</span>
</span><span class='line'>    303915241.28
</span><span class='line'>  <span class="o">]</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>API:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">PWMetrics</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;pwmetrics&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">new</span> <span class="nx">PWMetrics</span><span class="p">(</span><span class="s1">&#39;https://jsfeatures.in&#39;</span><span class="p">,</span> <span class="nx">opts</span><span class="p">);</span> <span class="c1">// opts =&gt; {data:fileName} for now.</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW!:</strong></p>

<p><img src="http://nmotw.in/images/pwmetrics/pwmetrics.gif" alt="pwmetrics" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[node-wifi-scanner]]></title>
    <link href="http://nmotw.in/node-wifi-scanner/"/>
    <updated>2016-08-18T11:33:58+00:00</updated>
    <id>http://nmotw.in/node-wifi-scanner</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/node-wifi-scanner">node-wifi-scanner</a></h1>

<blockquote><p>Scans the available WiFi networks.</p></blockquote>

<p><code>node-wifi-scanner</code> scans the available WiFi networks across operating systems and returns an array with objects, each object representing a network with the following properties:</p>

<ul>
<li><p>channel: WiFi channel</p></li>
<li><p>ssid: SSID of the network (if available)</p></li>
<li><p>mac: MAC Address of the network access point</p></li>
<li><p>rssi: signal strength</p></li>
</ul>


<p><strong>Get it:</strong> <code>npm install --save node-wifi-scanner</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">scanner</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;node-wifi-scanner&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">scanner</span><span class="p">.</span><span class="nx">scan</span><span class="p">((</span><span class="nx">err</span><span class="p">,</span> <span class="nx">networks</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">err</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">networks</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>Would log something like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="o">[</span> <span class="o">{</span> ssid: <span class="s1">&#39;Micromax A106&#39;</span>,
</span><span class='line'>    mac: <span class="s1">&#39;82:6a:b0:b7:fe:d2&#39;</span>,
</span><span class='line'>    channel: 6,
</span><span class='line'>    rssi: -85 <span class="o">}</span> <span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Basically uses the underlying OS tools to do the task:</p>

<ul>
<li><p>airport on Mac OS-X: <code>airport -s</code></p></li>
<li><p>netsh on Windows: <code>netsh wlan show networks mode=Bssid</code></p></li>
<li><p>iwlist on Linux: <code>iwlist scan</code></p></li>
</ul>


<p><strong>Features that would be nice to have:</strong></p>

<ul>
<li><p>Promises rather than callbacks.</p></li>
<li><p>allowing users to select the network and login in from CLI.</p></li>
<li><p>Look for a better name, rather that <code>node-wifi-scanner</code> ?</p></li>
</ul>


<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/node-wifi-scanner/node-wifi-scanner.gif" alt="node-wifi-scanner" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[next-update]]></title>
    <link href="http://nmotw.in/next-update/"/>
    <updated>2016-08-11T13:40:05+00:00</updated>
    <id>http://nmotw.in/next-update</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/next-update">next-update</a></h1>

<blockquote><p>Can I update the dependencies without breaking the tests?</p></blockquote>

<p>Summarizing <code>next-update</code> from the authors own words:</p>

<ul>
<li>A good workflow using <em>next-update</em>

<ul>
<li>see available new versions <code>next-update --available</code></li>
<li>check latest version of each module using <code>next-update --latest</code></li>
<li>install new versions of the desired modules using standard <code>npm i dependency@version --save</code></li>
</ul>
</li>
<li>You can use custom test command, for example <code>next-update -t "grunt test"</code>

<ul>
<li><code>npm test</code> is used by default.</li>
</ul>
</li>
<li>You can keep each working version in package.json by using <code>--keep</code> flag.</li>
</ul>


<p><strong>Get it:</strong></p>

<p><code>npm install -g next-update  // installs module globally</code></p>

<p><code>npm install --save-dev next-update</code></p>

<p>In your <code>package.json</code> :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;scripts&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;next-update&quot;</span><span class="o">:</span> <span class="s2">&quot;next-update -k true --tldr&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">$</span> <span class="nx">next</span><span class="o">-</span><span class="nx">update</span> <span class="o">--</span><span class="nx">help</span> <span class="o">|</span> <span class="nx">pbcopy</span>
</span><span class='line'><span class="nx">next</span><span class="o">-</span><span class="nx">update</span> <span class="o">-</span> <span class="nx">Tests</span> <span class="k">if</span> <span class="nx">module</span><span class="err">&#39;</span><span class="nx">s</span> <span class="nx">dependencies</span> <span class="nx">can</span> <span class="nx">be</span> <span class="nx">updated</span> <span class="nx">to</span> <span class="nx">the</span> <span class="nx">newer</span> <span class="nx">version</span> <span class="nx">without</span> <span class="nx">breaking</span> <span class="nx">the</span> <span class="nx">tests</span>
</span><span class='line'>  <span class="nx">version</span><span class="o">:</span> <span class="mf">1.2</span><span class="p">.</span><span class="mi">2</span>
</span><span class='line'>  <span class="nx">author</span><span class="o">:</span> <span class="p">{</span><span class="s2">&quot;email&quot;</span><span class="o">:</span><span class="s2">&quot;gleb.bahmutov@gmail.com&quot;</span><span class="p">,</span><span class="s2">&quot;name&quot;</span><span class="o">:</span><span class="s2">&quot;Gleb Bahmutov&quot;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Options</span><span class="o">:</span>
</span><span class='line'>  <span class="o">--</span><span class="nx">revert</span>           <span class="nx">install</span> <span class="nx">original</span> <span class="nx">module</span> <span class="nx">versions</span> <span class="nx">listed</span> <span class="k">in</span> <span class="kr">package</span><span class="p">.</span><span class="nx">json</span>   <span class="p">[</span><span class="k">default</span><span class="o">:</span> <span class="kc">false</span><span class="p">]</span>
</span><span class='line'>  <span class="o">--</span><span class="nx">available</span><span class="p">,</span> <span class="o">-</span><span class="nx">a</span>    <span class="nx">only</span> <span class="nx">query</span> <span class="nx">available</span> <span class="nx">later</span> <span class="nx">versions</span><span class="p">,</span> <span class="k">do</span> <span class="nx">not</span> <span class="nx">test</span> <span class="nx">them</span>     <span class="p">[</span><span class="k">default</span><span class="o">:</span> <span class="kc">false</span><span class="p">]</span>
</span><span class='line'>  <span class="o">--</span><span class="nx">module</span><span class="p">,</span> <span class="o">-</span><span class="nx">m</span>       <span class="nx">checks</span> <span class="nx">specific</span> <span class="nx">module</span><span class="p">,</span> <span class="nx">can</span> <span class="nx">include</span> <span class="nx">version</span> <span class="nx">name</span><span class="err">@</span><span class="nx">version</span>  <span class="p">[</span><span class="k">default</span><span class="o">:</span> <span class="kc">null</span><span class="p">]</span>
</span><span class='line'>  <span class="o">--</span><span class="nx">latest</span><span class="p">,</span> <span class="o">-</span><span class="nx">l</span>       <span class="nx">only</span> <span class="nx">check</span> <span class="nx">latest</span> <span class="nx">available</span> <span class="nx">update</span>                        <span class="p">[</span><span class="k">default</span><span class="o">:</span> <span class="kc">true</span><span class="p">]</span>
</span><span class='line'>  <span class="o">--</span><span class="nx">color</span><span class="p">,</span> <span class="o">-</span><span class="nx">c</span>        <span class="nx">color</span> <span class="nx">terminal</span> <span class="nx">output</span> <span class="p">(</span><span class="k">if</span> <span class="nx">available</span><span class="p">)</span>                      <span class="p">[</span><span class="k">default</span><span class="o">:</span> <span class="kc">true</span><span class="p">]</span>
</span><span class='line'>  <span class="o">--</span><span class="nx">version</span><span class="p">,</span> <span class="o">-</span><span class="nx">v</span>      <span class="nx">show</span> <span class="nx">version</span> <span class="nx">and</span> <span class="nx">exit</span>                                     <span class="p">[</span><span class="k">default</span><span class="o">:</span> <span class="kc">false</span><span class="p">]</span>
</span><span class='line'>  <span class="o">--</span><span class="nx">test</span><span class="p">,</span> <span class="o">-</span><span class="nx">t</span>         <span class="nx">custom</span> <span class="nx">test</span> <span class="nx">command</span> <span class="nx">to</span> <span class="nx">run</span> <span class="nx">instead</span> <span class="nx">of</span> <span class="nx">npm</span> <span class="nx">test</span>
</span><span class='line'>  <span class="o">--</span><span class="nx">skip</span>             <span class="nx">skip</span> <span class="nx">running</span> <span class="nx">tests</span> <span class="nx">first</span>                                  <span class="p">[</span><span class="k">default</span><span class="o">:</span> <span class="kc">false</span><span class="p">]</span>
</span><span class='line'>  <span class="o">--</span><span class="nx">all</span>              <span class="nx">install</span> <span class="nx">all</span> <span class="nx">modules</span> <span class="nx">at</span> <span class="nx">once</span> <span class="nx">before</span> <span class="nx">testing</span>                <span class="p">[</span><span class="k">default</span><span class="o">:</span> <span class="kc">false</span><span class="p">]</span>
</span><span class='line'>  <span class="o">--</span><span class="nx">keep</span><span class="p">,</span> <span class="o">-</span><span class="nx">k</span>         <span class="nx">keep</span> <span class="nx">tested</span> <span class="nx">version</span> <span class="k">if</span> <span class="nx">it</span> <span class="nx">is</span> <span class="nx">working</span>                      <span class="p">[</span><span class="k">default</span><span class="o">:</span> <span class="kc">false</span><span class="p">]</span>
</span><span class='line'>  <span class="o">--</span><span class="nx">allow</span>            <span class="nx">allow</span> <span class="nx">major</span> <span class="o">/</span> <span class="nx">minor</span> <span class="o">/</span> <span class="nx">patch</span> <span class="nx">updates</span>                       <span class="p">[</span><span class="k">default</span><span class="o">:</span> <span class="s2">&quot;major&quot;</span><span class="p">]</span>
</span><span class='line'>  <span class="o">--</span><span class="nx">type</span>             <span class="nx">check</span> <span class="nx">dependencies</span> <span class="nx">of</span> <span class="nx">type</span> <span class="p">(</span><span class="nx">all</span><span class="p">,</span> <span class="nx">prod</span><span class="p">,</span> <span class="nx">dev</span><span class="p">,</span> <span class="nx">peer</span><span class="p">)</span>         <span class="p">[</span><span class="k">default</span><span class="o">:</span> <span class="s2">&quot;all&quot;</span><span class="p">]</span>
</span><span class='line'>  <span class="o">--</span><span class="nx">tldr</span>             <span class="nx">only</span> <span class="nx">print</span> <span class="nx">VERY</span> <span class="nx">important</span> <span class="nx">log</span> <span class="nx">messages</span>                    <span class="p">[</span><span class="k">default</span><span class="o">:</span> <span class="kc">false</span><span class="p">]</span>
</span><span class='line'>  <span class="o">--</span><span class="nx">changed</span><span class="o">-</span><span class="nx">log</span><span class="p">,</span> <span class="o">-</span><span class="nx">L</span>  <span class="nx">print</span> <span class="nx">commit</span> <span class="nx">changes</span> <span class="nx">between</span> <span class="nx">working</span> <span class="nx">versions</span>             <span class="p">[</span><span class="k">default</span><span class="o">:</span> <span class="kc">true</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW:</strong></p>

<p><img src="http://nmotw.in/images/next-update/next-update.gif" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[currency-symbol-map]]></title>
    <link href="http://nmotw.in/currency-symbol-map/"/>
    <updated>2016-08-04T11:52:51+00:00</updated>
    <id>http://nmotw.in/currency-symbol-map</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/currency-symbol-map">currency-symbol-map</a></h1>

<blockquote><p>Lookup the currency symbol for a given currency code.</p></blockquote>

<p>Name says it all, this is tiny module that's helps one to get the symbol for a given currency or get the currency got given a symbol.</p>

<p><strong>Get it:</strong> <code>npm install --save currency-symbol-map</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">getSymbolFromCurrency</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;currency-symbol-map&#39;</span><span class="p">).</span><span class="nx">getSymbolFromCurrency</span><span class="p">;</span>
</span><span class='line'><span class="nx">getSymbolFromCurrency</span><span class="p">(</span><span class="s1">&#39;USD&#39;</span><span class="p">);</span> <span class="c1">//=&gt; &#39;$&#39; </span>
</span><span class='line'><span class="nx">getSymbolFromCurrency</span><span class="p">(</span><span class="s1">&#39;NOT A VALID CODE&#39;</span><span class="p">);</span> <span class="c1">//=&gt; undefined </span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">getCurrencyFromSymbol</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;currency-symbol-map&#39;</span><span class="p">).</span><span class="nx">getCurrencyFromSymbol</span><span class="p">;</span>
</span><span class='line'><span class="nx">getCurrencyFromSymbol</span><span class="p">(</span><span class="s1">&#39;$&#39;</span><span class="p">);</span> <span class="c1">//=&gt; &#39;USD&#39; </span>
</span><span class='line'><span class="nx">getCurrencyFromSymbol</span><span class="p">(</span><span class="s1">&#39;NOT A VALID CODE&#39;</span><span class="p">);</span> <span class="c1">//=&gt; undefined </span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW:</strong></p>

<p><img src="http://nmotw.in/images/currency-symbol-map/curreny-symbol-map.gif" alt="currency-symbol-map" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[reify]]></title>
    <link href="http://nmotw.in/reify/"/>
    <updated>2016-07-28T15:10:10+00:00</updated>
    <id>http://nmotw.in/reify</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/reify">reify</a></h1>

<blockquote><p>Enable ECMAScript 2015 modules in Node today. No caveats. Full stop.</p></blockquote>

<p><strong>Get it:</strong> <code>npm install --save refiy</code></p>

<p><strong>Usage:</strong></p>

<ul>
<li><p><code>npm install --save reify</code></p></li>
<li><p><code>require("reify")</code> before <code>import</code> and <code>export</code> declarations.</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="o">&gt;</span> <span class="nx">require</span><span class="p">(</span><span class="s2">&quot;reify/repl&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span> <span class="kr">import</span> <span class="p">{</span> <span class="nx">strictEqual</span> <span class="p">}</span> <span class="nx">from</span> <span class="s2">&quot;assert&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span> <span class="nx">strictEqual</span><span class="p">(</span><span class="mi">2</span><span class="o">+</span><span class="mi">2</span><span class="p">,</span><span class="mi">7</span><span class="p">);</span>
</span><span class='line'><span class="nx">AssertionError</span><span class="o">:</span> <span class="mi">4</span> <span class="o">===</span> <span class="mi">7</span>
</span><span class='line'>    <span class="nx">at</span> <span class="nx">repl</span><span class="o">:</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span>
</span><span class='line'>    <span class="nx">at</span> <span class="nx">REPLServer</span><span class="p">.</span><span class="nx">defaultEval</span> <span class="p">(</span><span class="nx">repl</span><span class="p">.</span><span class="nx">js</span><span class="o">:</span><span class="mi">272</span><span class="o">:</span><span class="mi">27</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">at</span> <span class="nx">bound</span> <span class="p">(</span><span class="nx">domain</span><span class="p">.</span><span class="nx">js</span><span class="o">:</span><span class="mi">280</span><span class="o">:</span><span class="mi">14</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">at</span> <span class="nx">REPLServer</span><span class="p">.</span><span class="nx">runBound</span> <span class="p">[</span><span class="nx">as</span> <span class="nb">eval</span><span class="p">]</span> <span class="p">(</span><span class="nx">domain</span><span class="p">.</span><span class="nx">js</span><span class="o">:</span><span class="mi">293</span><span class="o">:</span><span class="mi">12</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">at</span> <span class="nx">REPLServer</span><span class="p">.</span><span class="o">&lt;</span><span class="nx">anonymous</span><span class="o">&gt;</span> <span class="p">(</span><span class="nx">repl</span><span class="p">.</span><span class="nx">js</span><span class="o">:</span><span class="mi">441</span><span class="o">:</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">at</span> <span class="nx">emitOne</span> <span class="p">(</span><span class="nx">events</span><span class="p">.</span><span class="nx">js</span><span class="o">:</span><span class="mi">101</span><span class="o">:</span><span class="mi">20</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">at</span> <span class="nx">REPLServer</span><span class="p">.</span><span class="nx">emit</span> <span class="p">(</span><span class="nx">events</span><span class="p">.</span><span class="nx">js</span><span class="o">:</span><span class="mi">188</span><span class="o">:</span><span class="mi">7</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">at</span> <span class="nx">REPLServer</span><span class="p">.</span><span class="nx">Interface</span><span class="p">.</span><span class="nx">_onLine</span> <span class="p">(</span><span class="nx">readline</span><span class="p">.</span><span class="nx">js</span><span class="o">:</span><span class="mi">224</span><span class="o">:</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">at</span> <span class="nx">REPLServer</span><span class="p">.</span><span class="nx">Interface</span><span class="p">.</span><span class="nx">_line</span> <span class="p">(</span><span class="nx">readline</span><span class="p">.</span><span class="nx">js</span><span class="o">:</span><span class="mi">566</span><span class="o">:</span><span class="mi">8</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">at</span> <span class="nx">REPLServer</span><span class="p">.</span><span class="nx">Interface</span><span class="p">.</span><span class="nx">_ttyWrite</span> <span class="p">(</span><span class="nx">readline</span><span class="p">.</span><span class="nx">js</span><span class="o">:</span><span class="mi">843</span><span class="o">:</span><span class="mi">14</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Code generated by the <code>reify</code> compiler relies on a <a href="lib/runtime.js">simple runtime
API</a>.</p>

<p><strong>GIF FTW:</strong></p>

<p><img src="http://nmotw.in/images/reify/reify.gif" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[wifi-triangulate]]></title>
    <link href="http://nmotw.in/wifi-triangulate/"/>
    <updated>2016-07-21T17:16:26+00:00</updated>
    <id>http://nmotw.in/wifi-triangulate</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/wifi-triangulate">wifi-triangulate</a></h1>

<blockquote><p>Finds your current position on planet earth using the wifi access points in your vicinity.</p></blockquote>

<p>This module requires that the wifi card on your computer is active and that you have access to the internet in order to communicate with Google so that it can triangulate your position.</p>

<p><strong>Get it:</strong> <code>npm install --global wifi-triangulate</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">triangulate</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;wifi-triangulate&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nx">triangulate</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">location</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="k">throw</span> <span class="nx">err</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">location</span><span class="p">)</span> <span class="c1">// =&gt; { lat: 38.0690894, lng: -122.8069356, accuracy: 42 } </span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW!:</strong></p>

<p><img src="http://nmotw.in/images/wifi-triangulate/wifi-triangulate.gif" alt="wifi-triangulate" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cleave.js]]></title>
    <link href="http://nmotw.in/cleave.js/"/>
    <updated>2016-07-14T12:23:00+00:00</updated>
    <id>http://nmotw.in/cleave.js</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/cleave.js#why">cleave.js</a></h1>

<blockquote><p>Input text content formatter.</p></blockquote>

<p><code>Cleave.js</code> has a simple purpose: to help you format input text content automatically.</p>

<p>Provides these features:</p>

<ul>
<li><p>Credit card number formatting</p></li>
<li><p>Phone number formatting (i18n js lib separated for each country to reduce size)</p></li>
<li><p>Date formatting</p></li>
<li><p>Numeral formatting</p></li>
<li><p>Custom delimiter, prefix and blocks pattern</p></li>
<li><p>CommonJS / AMD mode</p></li>
<li><p>ReactJS component port</p></li>
</ul>


<p><strong>Get it:</strong> <code>npm install --save cleave.js</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;input</span> <span class="na">class=</span><span class="s">&quot;input-phone&quot;</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span><span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>`</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">Cleave</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;cleave.js&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">require</span><span class="p">(</span><span class="s1">&#39;cleave.js/dist/addons/cleave-phone.{country}&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">cleave</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Cleave</span><span class="p">(</span><span class="s1">&#39;.input-phone&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">phone</span><span class="o">:</span>      <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">regionCode</span><span class="o">:</span> <span class="s1">&#39;{country}&#39;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/cleave.js/cleave.js.gif" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[listr]]></title>
    <link href="http://nmotw.in/listr/"/>
    <updated>2016-07-07T10:03:39+00:00</updated>
    <id>http://nmotw.in/listr</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/listr">listr</a></h1>

<blockquote><p>Terminal task list.</p></blockquote>

<p><code>listr</code> is one of those cheeky üíÑ modules for your CLI apps.</p>

<p>Below is the gist of this module:</p>

<ul>
<li><p><code>listr</code> accepts an array of tasks, where each task in a object consisting of <code>title</code> (string) and <code>task</code> (method).</p></li>
<li><p>If a task returns, it means the task was completed succesfully.</p></li>
<li><p>If a task throws an error, the task failed.</p></li>
<li><p>Task can be async by returning a Promise.</p></li>
<li><p>Task can be an Observable.</p></li>
<li><p>Task can also be a stream, which is in-turn converted to an Observable.</p></li>
<li><p>An instance of <code>listr</code> has <code>add(task)</code>, <code>task</code> and <code>run</code> methods. (Names are self explanatory?)</p></li>
</ul>


<p><strong>Get it:</strong> <code>npm install --save listr</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kr">const</span> <span class="nx">tasks</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Listr</span><span class="p">([</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="nx">title</span><span class="o">:</span> <span class="s1">&#39;Success&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">task</span><span class="o">:</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="s1">&#39;Foo&#39;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="nx">title</span><span class="o">:</span> <span class="s1">&#39;Failure&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">task</span><span class="o">:</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s1">&#39;Bar&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">tasks</span><span class="p">.</span><span class="nx">run</span><span class="p">().</span><span class="k">catch</span><span class="p">(</span><span class="nx">err</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">err</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/listr/listr.gif" alt="listr" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[node-nightly]]></title>
    <link href="http://nmotw.in/node-nightly/"/>
    <updated>2016-06-30T12:31:14+00:00</updated>
    <id>http://nmotw.in/node-nightly</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/node-nightly">node-nightly</a></h1>

<blockquote><p>node-nightly at your finger tips!</p></blockquote>

<p><code>node-nightly</code> as the name says it's the nightly version of <code>node</code>, basically:</p>

<ul>
<li><p>Check if nightly version of node is available if not install it. (For the first time.)</p></li>
<li><p>If there is a new version available will notify the user saying there is a newer version available and can update using <code>node-nightly --update</code></p></li>
</ul>


<p><strong>Get it</strong> : <code>npm install -g node-nightly</code> # Preferred global</p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">$</span> <span class="nx">node</span><span class="o">-</span><span class="nx">nightly</span> <span class="o">--</span><span class="nx">inspect</span> <span class="o">--</span><span class="nx">debug</span><span class="o">-</span><span class="nx">brk</span> <span class="nx">index</span><span class="p">.</span><span class="nx">js</span>
</span><span class='line'><span class="nx">Debugger</span> <span class="nx">listening</span> <span class="nx">on</span> <span class="nx">port</span> <span class="mi">9229</span><span class="p">.</span>
</span><span class='line'><span class="nx">To</span> <span class="nx">start</span> <span class="nx">debugging</span><span class="p">,</span> <span class="nx">open</span> <span class="nx">the</span> <span class="nx">following</span> <span class="nx">URL</span> <span class="k">in</span> <span class="nx">Chrome</span><span class="o">:</span>
</span><span class='line'>    <span class="nx">chrome</span><span class="o">-</span><span class="nx">devtools</span><span class="o">:</span><span class="c1">//devtools/remote/serve_file/@521e5b7e2b7cc66b4006a8a54cb9c4e57494a5ef/inspector.html?experiments=true&amp;v8only=true&amp;ws=localhost:9229/node</span>
</span><span class='line'><span class="nx">Debugger</span> <span class="nx">attached</span><span class="p">.</span>
</span><span class='line'><span class="nx">Waiting</span> <span class="k">for</span> <span class="nx">the</span> <span class="kr">debugger</span> <span class="nx">to</span> <span class="nx">disconnect</span><span class="p">...</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/node-nightly/node-nightly.gif" alt="node-nightly" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[esbox]]></title>
    <link href="http://nmotw.in/esbox/"/>
    <updated>2016-06-23T13:46:09+00:00</updated>
    <id>http://nmotw.in/esbox</id>
    <content type="html"><![CDATA[<h1><a href="">üì¶ esbox</a></h1>

<blockquote><p>Zero-config REPL for experimenting with next-generation JavaScript.</p></blockquote>

<p><code>esbox</code> is ES2016 in a box!</p>

<p><strong>Get it:</strong> <code>npm install -g esbox</code></p>

<ul>
<li><p>It automatically compiles and re-runs your script every time you save.</p></li>
<li><p>JSBin-like setup for your local editor and terminal ‚Äì with full access to Node APIs and modules.</p></li>
<li><p>ECMAScript features that Babel supports (stage-0 and above).</p></li>
<li><p>For a number of popular libraries, you can just import them without the need to install them first (Bascially all the dependecies of <code>esbox</code>).</p></li>
</ul>


<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>nmotw.in&gt; esbox
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    üì¶  ES2016 in a box
</span><span class='line'>       git.io/esbox
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  Usage
</span><span class='line'>    &gt; esbox FILENAME
</span><span class='line'>
</span><span class='line'>  Options
</span><span class='line'>    --cwd<span class="o">=</span>DIRECTORY   run in a different directory
</span><span class='line'>    --no-watch        only run your script once
</span><span class='line'>    --no-clear        disable clearing the display before each run
</span><span class='line'>    --version         show esbox version
</span><span class='line'>    --poll            poll file system when watching files
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/esbox/esbox.gif" alt="esbox" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rainbowify]]></title>
    <link href="http://nmotw.in/rainbowify/"/>
    <updated>2016-06-16T14:03:58+00:00</updated>
    <id>http://nmotw.in/rainbowify</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/rainbowify">rainbowify</a></h1>

<blockquote><p>rainbow print stuff in terminal</p></blockquote>

<p><code>rainbowify</code> is an module extracted from mocha's <a href="https://github.com/mochajs/mocha/blob/master/lib/reporters/nyan.js">nyan.js</a> which is a fun little module
that helps to print rainbow text on the terminal.</p>

<p><strong>Get it:</strong> <code>npm install --global rainbowify</code></p>

<p><strong>Usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> &lt;some_text&gt; | rainbowify
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW!</strong></p>

<p><img src="http://nmotw.in/images/rainbowify/rainbowify.gif" alt="rainbowify" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pwaify]]></title>
    <link href="http://nmotw.in/pwaify/"/>
    <updated>2016-06-09T12:33:41+00:00</updated>
    <id>http://nmotw.in/pwaify</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/pwaify">pwaify</a></h1>

<blockquote><p>PWA to desktop app!</p></blockquote>

<p><code>pwaify</code> bring <a href="https://developers.google.com/web/progressive-web-apps/">progressive</a> <a href="https://github.com/hemanth/generator-pwa">Webapp</a> to your desktops across platforms!</p>

<p>Makes use of <a href="http://electron.atom.io/">Electron</a> extracts the <code>manifest-json</code> from the given URL and smartly creates an electron window and loads the required.</p>

<p><strong>Get it:</strong> <code>npm install --global pwaify</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>nmotw.in&gt; pwaify --help
</span><span class='line'>
</span><span class='line'>  Electron PWA <span class="o">(</span>Progressive Web App<span class="o">)</span> Generator
</span><span class='line'>
</span><span class='line'>  Usage
</span><span class='line'>    <span class="nv">$ </span>pwaify &lt;input&gt;
</span><span class='line'>
</span><span class='line'>  Options
</span><span class='line'>    --platforms Platforms to build the app.
</span><span class='line'>    --icon App Icon.
</span><span class='line'>
</span><span class='line'>  Examples
</span><span class='line'>    <span class="nv">$ </span>pwaify https://jsfeatures.in --platforms<span class="o">=</span>darwin
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW:</strong></p>

<p><img src="http://nmotw.in/images/pwaify/PWAify.gif" alt="PWAify" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[kind-of]]></title>
    <link href="http://nmotw.in/kind-of/"/>
    <updated>2016-06-02T16:37:20+00:00</updated>
    <id>http://nmotw.in/kind-of</id>
    <content type="html"><![CDATA[<h1><a href="https://www.npmjs.com/package/kind-of">kind-of</a></h1>

<blockquote><p>Get the native type of a value.</p></blockquote>

<p>Most of use would have faced nuances of <code>typeof</code> like below:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="o">&gt;</span> <span class="k">typeof</span> <span class="p">(</span><span class="kc">null</span><span class="p">)</span>
</span><span class='line'><span class="s1">&#39;object&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span> <span class="k">typeof</span> <span class="sr">/RE/</span>
</span><span class='line'><span class="s1">&#39;object&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span> <span class="k">typeof</span> <span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">())</span>
</span><span class='line'><span class="s1">&#39;object&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span> <span class="k">typeof</span> <span class="p">[]</span>
</span><span class='line'><span class="s1">&#39;object&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span> <span class="k">typeof</span> <span class="p">{}</span>
</span><span class='line'><span class="s1">&#39;object&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>kind-of</code> just fixes these issues and is also <code>ES6</code> ready.</p>

<p><strong>Get it:</strong> <code>npm install --save kind-of</code></p>

<p><strong>Sample usage:</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">kindOf</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;kind-of&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="kc">undefined</span><span class="p">);</span>
</span><span class='line'><span class="c1">//=&gt; &#39;undefined&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="kc">null</span><span class="p">);</span>
</span><span class='line'><span class="c1">//=&gt; &#39;null&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span>
</span><span class='line'><span class="c1">//=&gt; &#39;boolean&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="kc">false</span><span class="p">);</span>
</span><span class='line'><span class="c1">//=&gt; &#39;boolean&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="k">new</span> <span class="nb">Boolean</span><span class="p">(</span><span class="kc">true</span><span class="p">));</span>
</span><span class='line'><span class="c1">//=&gt; &#39;boolean&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="k">new</span> <span class="nx">Buffer</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">));</span>
</span><span class='line'><span class="c1">//=&gt; &#39;buffer&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="mi">42</span><span class="p">);</span>
</span><span class='line'><span class="c1">//=&gt; &#39;number&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="k">new</span> <span class="nb">Number</span><span class="p">(</span><span class="mi">42</span><span class="p">));</span>
</span><span class='line'><span class="c1">//=&gt; &#39;number&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="s1">&#39;str&#39;</span><span class="p">);</span>
</span><span class='line'><span class="c1">//=&gt; &#39;string&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="k">new</span> <span class="nb">String</span><span class="p">(</span><span class="s1">&#39;str&#39;</span><span class="p">));</span>
</span><span class='line'><span class="c1">//=&gt; &#39;string&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="nx">arguments</span><span class="p">);</span>
</span><span class='line'><span class="c1">//=&gt; &#39;arguments&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">({});</span>
</span><span class='line'><span class="c1">//=&gt; &#39;object&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="kc">null</span><span class="p">));</span>
</span><span class='line'><span class="c1">//=&gt; &#39;object&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="k">new</span> <span class="nx">Test</span><span class="p">());</span>
</span><span class='line'><span class="c1">//=&gt; &#39;object&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">());</span>
</span><span class='line'><span class="c1">//=&gt; &#39;date&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">([]);</span>
</span><span class='line'><span class="c1">//=&gt; &#39;array&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]);</span>
</span><span class='line'><span class="c1">//=&gt; &#39;array&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="k">new</span> <span class="nb">Array</span><span class="p">());</span>
</span><span class='line'><span class="c1">//=&gt; &#39;array&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="sr">/foo/</span><span class="p">);</span>
</span><span class='line'><span class="c1">//=&gt; &#39;regexp&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s1">&#39;foo&#39;</span><span class="p">));</span>
</span><span class='line'><span class="c1">//=&gt; &#39;regexp&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{});</span>
</span><span class='line'><span class="c1">//=&gt; &#39;function&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="kd">function</span> <span class="o">*</span> <span class="p">()</span> <span class="p">{});</span>
</span><span class='line'><span class="c1">//=&gt; &#39;function&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="k">new</span> <span class="nb">Function</span><span class="p">());</span>
</span><span class='line'><span class="c1">//=&gt; &#39;function&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="k">new</span> <span class="nx">Map</span><span class="p">());</span>
</span><span class='line'><span class="c1">//=&gt; &#39;map&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="k">new</span> <span class="nx">WeakMap</span><span class="p">());</span>
</span><span class='line'><span class="c1">//=&gt; &#39;weakmap&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="k">new</span> <span class="nx">Set</span><span class="p">());</span>
</span><span class='line'><span class="c1">//=&gt; &#39;set&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="k">new</span> <span class="nx">WeakSet</span><span class="p">());</span>
</span><span class='line'><span class="c1">//=&gt; &#39;weakset&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="nx">Symbol</span><span class="p">(</span><span class="s1">&#39;str&#39;</span><span class="p">));</span>
</span><span class='line'><span class="c1">//=&gt; &#39;symbol&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="k">new</span> <span class="nx">Int8Array</span><span class="p">());</span>
</span><span class='line'><span class="c1">//=&gt; &#39;int8array&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="k">new</span> <span class="nx">Uint8Array</span><span class="p">());</span>
</span><span class='line'><span class="c1">//=&gt; &#39;uint8array&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="k">new</span> <span class="nx">Uint8ClampedArray</span><span class="p">());</span>
</span><span class='line'><span class="c1">//=&gt; &#39;uint8clampedarray&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="k">new</span> <span class="nx">Int16Array</span><span class="p">());</span>
</span><span class='line'><span class="c1">//=&gt; &#39;int16array&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="k">new</span> <span class="nx">Uint16Array</span><span class="p">());</span>
</span><span class='line'><span class="c1">//=&gt; &#39;uint16array&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="k">new</span> <span class="nx">Int32Array</span><span class="p">());</span>
</span><span class='line'><span class="c1">//=&gt; &#39;int32array&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="k">new</span> <span class="nx">Uint32Array</span><span class="p">());</span>
</span><span class='line'><span class="c1">//=&gt; &#39;uint32array&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="k">new</span> <span class="nx">Float32Array</span><span class="p">());</span>
</span><span class='line'><span class="c1">//=&gt; &#39;float32array&#39; </span>
</span><span class='line'>
</span><span class='line'><span class="nx">kindOf</span><span class="p">(</span><span class="k">new</span> <span class="nx">Float64Array</span><span class="p">());</span>
</span><span class='line'><span class="c1">//=&gt; &#39;float64array&#39; </span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>GIF FTW</strong></p>

<p><img src="http://nmotw.in/images/kind-of/kind-of.gif" alt="kind-of" /></p>
]]></content>
  </entry>
  
</feed>
